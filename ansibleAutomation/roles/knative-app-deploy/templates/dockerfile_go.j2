FROM golang:1.13 as builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Install Dependencies
{% if mod is defined %}
{% for dep_mod in mod %}
RUN go get -u {{dep_mod}}
{% endfor %}
{% endif %}

# Copy local code to the container image.
COPY . ./

# Build the binary.
# -mod=readonly ensures immutable go.mod and go.sum in container builds.
RUN CGO_ENABLED=0 GOOS=linux go build -v -o server

#Expose port 8080 to the outside world
EXPOSE 8080

# Use the official Alpine image for a lean production container.
# https://hub.docker.com/_/alpine
# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds
FROM alpine:3
RUN apk add --no-cache ca-certificates

# Copy the binary to the production image from the builder stage.
COPY --from=builder /app/server /server

CMD ["/server"]

